#BlueJ class context
comment0.target=Temperature
comment0.text=\r\n\ Temperature\ stores\ a\ temperature\ in\ Fahrenheit,\ Celsius,\ \r\n\ and\ Kelvin\ scales.\r\n\r\n\ @author\ Melissa\ Mahlberg\r\n\ @version\ 1.0\r\n
comment1.params=
comment1.target=Temperature()
comment1.text=\r\n\ Default\ constructor\ for\ Temperature\ sets\ the\ default\r\n\ value\ of\ the\ Temperature\ object\ to\ 0.0\ degrees\r\n\ Fahrenheit\ with\ Celsius\ and\ Kelvin\ equivalents\r\n
comment2.params=degrees
comment2.target=Temperature(double)
comment2.text=\r\n\ This\ constructor\ for\ Temperature\ sets\ the\ Fahrenheit\r\n\ value\ to\ the\ value\ from\ degrees,\ then\ calculates\r\n\ equivalent\ Celsius\ and\ Kelvin\ values\ using\ setDegreesFahrenheit()\r\n\ \r\n\ @param\ degrees\ degrees\ Fahrenheit\r\n
comment3.params=degrees
comment3.target=void\ setDegreesFahrenheit(double)
comment3.text=\r\n\ The\ setDegreesFahrenheit\ method\ sets\ the\ Fahrenheit\ temperature\r\n\ \r\n\ @param\ degrees\ The\ Fahrenheit\ value\ to\ store\r\n
comment4.params=
comment4.target=double\ getDegreesCelsius()
comment4.text=\r\n\ getDegreesCelsius\ retrieves\ the\ Celsius\ temperature\ value\r\n\ \r\n\ @return\ a\ double\ value\ containing\ the\ Celsius\ temperature\r\n
comment5.params=
comment5.target=double\ getDegreesKelvin()
comment5.text=\r\n\ getDegreesKelvin\ retrieves\ the\ Kelvin\ temperature\ value\r\n\ \r\n\ @return\ a\ double\ value\ containing\ the\ Kelvin\ temperature\r\n
numComments=6
